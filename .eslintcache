[{"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/index.js":"1","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/App.js":"2","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/Header.js":"3","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/Search.js":"4","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/Login.js":"5","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/Detail.js":"6","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/utils/Helper.js":"7","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/component/Loading.js":"8","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/component/Nodata.js":"9","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/editor/PreviewEditor.js":"10","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/editor/Helper.js":"11","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/editor/functions.js":"12","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/editor/Element.js":"13","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/store.js":"14","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/BaseSlice.js":"15","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/ChannelSlice.js":"16","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/WikiSlice.js":"17","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/HelperSlice.js":"18","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/UploadSlice.js":"19","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/GlobalStateSlice.js":"20","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/AskSlice.js":"21","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/config.js":"22","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/UserSlice.js":"23","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/pages/home/Home.js":"24","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/pages/home/Ask.js":"25","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/pages/home/Browse.js":"26","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/pages/home/Starred.js":"27","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/Main.jsx":"28","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/events.js":"29"},{"size":159,"mtime":1641376712715,"results":"30","hashOfConfig":"31"},{"size":4226,"mtime":1641461460861,"results":"32","hashOfConfig":"31"},{"size":2640,"mtime":1641461527319,"results":"33","hashOfConfig":"31"},{"size":2033,"mtime":1641372332623,"results":"34","hashOfConfig":"31"},{"size":300,"mtime":1641361038167,"results":"35","hashOfConfig":"31"},{"size":3841,"mtime":1641367771089,"results":"36","hashOfConfig":"31"},{"size":1958,"mtime":1641377565943,"results":"37","hashOfConfig":"31"},{"size":318,"mtime":1611056491952,"results":"38","hashOfConfig":"31"},{"size":212,"mtime":1611056491999,"results":"39","hashOfConfig":"31"},{"size":1207,"mtime":1610792865612,"results":"40","hashOfConfig":"31"},{"size":8181,"mtime":1611056494358,"results":"41","hashOfConfig":"31"},{"size":4288,"mtime":1611056494065,"results":"42","hashOfConfig":"31"},{"size":4523,"mtime":1610792865607,"results":"43","hashOfConfig":"31"},{"size":935,"mtime":1641367256640,"results":"44","hashOfConfig":"31"},{"size":7369,"mtime":1641460917215,"results":"45","hashOfConfig":"31"},{"size":26838,"mtime":1641364506817,"results":"46","hashOfConfig":"31"},{"size":30173,"mtime":1641365998980,"results":"47","hashOfConfig":"31"},{"size":486,"mtime":1641364506824,"results":"48","hashOfConfig":"31"},{"size":1003,"mtime":1641364506829,"results":"49","hashOfConfig":"50"},{"size":694,"mtime":1641377502014,"results":"51","hashOfConfig":"31"},{"size":8083,"mtime":1641365956603,"results":"52","hashOfConfig":"31"},{"size":579,"mtime":1641375745309,"results":"53","hashOfConfig":"31"},{"size":416,"mtime":1641367239923,"results":"54","hashOfConfig":"31"},{"size":1717,"mtime":1641461763285,"results":"55","hashOfConfig":"31"},{"size":84,"mtime":1641374439315,"results":"56","hashOfConfig":"31"},{"size":90,"mtime":1641374444447,"results":"57","hashOfConfig":"31"},{"size":1735,"mtime":1641374710479,"results":"58","hashOfConfig":"31"},{"size":1568,"mtime":1641377420533,"results":"59","hashOfConfig":"31"},{"size":552,"mtime":1641461077605,"results":"60","hashOfConfig":"31"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1rq8n3c",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e0ghai",{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"63"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/index.js",[],["133","134"],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/App.js",["135","136","137","138","139","140","141","142","143","144"],"import { useEffect } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport Main from './Main'\n\nimport Header from './Header'\nimport Login from './Login'\nimport Search from './Search'\nimport Detail from './Detail'\nimport { Provider, useDispatch, useSelector } from 'react-redux'\n\nimport { checkExtensionInstalled } from './utils/Helper'\nimport store from './features/store'\nimport Styles from './App.module.css'\nimport { baseSelector, setBase, setBaseMembers, setBases } from './features/BaseSlice'\nimport { userSelector, setUser } from './features/UserSlice'\nimport { globalStateSelector } from './features/GlobalStateSlice'\nimport { getBases, getMetaData, getUser } from 'features/events'\nimport { setChannels } from 'features/ChannelSlice'\n\nfunction App() {\n\tconst { isShow, isLogin, page } = useSelector(globalStateSelector)\n\tconst { user } = useSelector(userSelector)\n\tconst dispatch = useDispatch()\n\n\tconsole.log(isShow, isLogin)\n\t//const { extensionid, projects, , searchtext, notedetail, recent } = {}\n\n\tconst _isshow = () => {\n\t\t// if (isshow) {\n\t\t// \tdispatch({ type: 'ISSHOW', payload: false })\n\t\t// } else {\n\t\t// \tdispatch({ type: 'ISSHOW', payload: true })\n\t\t// }\n\t}\n\tconst _search = async (text) => {\n\t\t// dispatch({ type: 'ISSHOW', payload: true })\n\t\t// dispatch({ type: 'SETSEARCH', payload: text })\n\t\t// dispatch({ type: 'SET_PAGE', payload: 'SEARCH' })\n\t\t// const searchnode = document.getElementById('searchtext')\n\t\t// if (searchnode) {\n\t\t// \tsearchnode.value = text\n\t\t// }\n\t\t// dispatch({ type: 'NOTEDETAIL', payload: {} })\n\t\t// dispatch({ type: 'SEARCHRESULTLOADING', payload: true })\n\t\t// dispatch({ type: 'SEARCHRESULT', payload: [] })\n\t\t// if (user.current_project) {\n\t\t// \tsearch(user.current_project, text)\n\t\t// }\n\t}\n\tconst isJson = (str) => {\n\t\ttry {\n\t\t\tJSON.parse(str)\n\t\t} catch (e) {\n\t\t\treturn false\n\t\t}\n\t\treturn true\n\t}\n\tconst updateDispatch = (data) => {\n\t\t// if (isJson(data.payload)) {\n\t\t// \tdata.payload = JSON.parse(data.payload)\n\t\t// }\n\t\t// if (Array.isArray(data.payload)) {\n\t\t// \tdata.payload = data.payload\n\t\t// }\n\t\t// dispatch(data)\n\t}\n\tconst mergeDispatch = (data) => {\n\t\t// if (isJson(data.payload)) {\n\t\t// \tdata.payload = [...recent, ...JSON.parse(data.payload)]\n\t\t// }\n\t\t// if (Array.isArray(data.payload)) {\n\t\t// \tdata.payload = [...recent, ...data.payload]\n\t\t// }\n\t\t// dispatch(data)\n\t}\n\twindow._isshow = _isshow\n\twindow._search = _search\n\twindow.updateDispatch = updateDispatch\n\twindow.mergeDispatch = mergeDispatch\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tgetMetaData()\n\t\t}, 1000)\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst passToReact = (evt) => {\n\t\t\tif(evt?.detail){\n\t\t\t\tconst { CMD, payload } = evt?.detail\n\t\t\t\tconsole.log(CMD, payload)\n\t\t\t\tif(CMD==='META_DATA'){\n\t\t\t\t\tif (payload['@user']) {\n\t\t\t\t\t\tdispatch(setUser({ data: JSON.parse(payload['@user']) }))\n\t\t\t\t\t}\n\t\t\t\t\tif (payload['@bases']) {\n\t\t\t\t\t\tdispatch(setBases({ data: JSON.parse(payload['@bases']) }))\n\t\t\t\t\t}\n\t\t\t\t\tif (payload['@channels']) {\n\t\t\t\t\t\tdispatch(setChannels({ data: JSON.parse(payload['@channels']) }))\n\t\t\t\t\t}\n\t\t\t\t\tif (payload['@members']) {\n\t\t\t\t\t\tdispatch(setBaseMembers({ data: JSON.parse(payload['@members']) }))\n\t\t\t\t\t}\n\t\t\t\t\tif (payload['@base']) {\n\t\t\t\t\t\tdispatch(setBase({ data: JSON.parse(payload['@base']) }))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(CMD==='GET_USER'){\n\t\t\t\t\tdispatch(setUser({ data: JSON.parse(payload) }))\n\t\t\t\t}\n\t\t\t\tif (CMD === 'GET_BASES') {\n\t\t\t\t\tdispatch(setBases({ data: JSON.parse(payload) }))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twindow.addEventListener('passToReact', passToReact, false) //sender\n\t\treturn () => {\n\t\t\twindow.removeEventListener('passToReact', passToReact, false) //sender\n\t\t}\n\t}, [dispatch])\n\n\tif (isLogin) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`${Styles.App} ${isShow ? Styles.SlideIn : Styles.SlideOut}`}\n\t\t\t\tstyle={{ width: isShow ? '350px' : '0px', overflow: isShow ? 'visible' : 'hidden' }}>\n\t\t\t\t<Header />\n\t\t\t\t<Main />\n\t\t\t</div>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`${Styles.App} ${isShow ? Styles.SlideIn : Styles.SlideOut}`}\n\t\t\t\tstyle={{ width: isShow ? '350px' : '0px', overflow: isShow ? 'visible' : 'hidden' }}>\n\t\t\t\t<Login />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => (\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n)\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/Header.js",["145","146"],"import React, { useEffect } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport Styles from './Header.module.css'\nimport { X, ChevronDown } from 'react-feather'\n//import { useTrackedState, useDispatch } from './context/Store'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { baseSelector, setBase } from './features/BaseSlice'\n\nexport default function Header() {\n\tconst dispatch = useDispatch()\n\tconst { bases, base } = useSelector(baseSelector)\n\t//const { isshow, token, user, projects, searchtext } = state\n\tconst _searchChange = async (e) => {\n\t\t// const text = e.currentTarget.value\n\t\t// if (e.keyCode === 13 && text.length > 3) {\n\t\t// \tdispatch({ type: 'NOTEDETAIL', payload: {} })\n\t\t// \tdispatch({ type: 'SEARCHRESULTLOADING', payload: true })\n\t\t// \tdispatch({ type: 'SEARCHRESULT', payload: [] })\n\t\t// \tdispatch({ type: 'SET_PAGE', payload: 'SEARCH' })\n\t\t// \t//const projectId = user.current_project\n\t\t// \t//search(projectId, text)\n\t\t// \treturn\n\t\t// }\n\t\t// dispatch({ type: 'SETSEARCH', payload: text })\n\t}\n\tconst _reset = () => {\n\t\t// dispatch({ type: 'NOTEDETAIL', payload: {} })\n\t\t// dispatch({ type: 'ISSHOW', payload: false })\n\t\t// dispatch({ type: 'SET_PAGE', payload: 'HOME' })\n\t\t// dispatch({ type: 'SEARCHRESULT', payload: [] })\n\t\t// dispatch({ type: 'SETSEARCH', payload: '' })\n\t\t// dispatch({ type: 'SEARCHRESULTUUID', payload: {} })\n\t\t// document.getElementById('searchtext').value = ''\n\t}\n\tconst currentProject = (projid) => {\n\t\t//console.log(typeof projid, bases)\n\t\tconst newbase = bases.find((o) => o.id === parseInt(projid))\n\t\tconsole.log('newbase', newbase)\n\t\tif(newbase)\tdispatch(setBase({ data: newbase }))\n\t}\n\n\tuseEffect(() => {\n\t\tif (bases?.length) {\n\t\t\tdispatch(setBase({ data: bases[0] }))\n\t\t}\n\t}, [bases])\n\n\treturn (\n\t\t<div className={Styles.Head}>\n\t\t\t<div className={Styles.HeadTop}>\n\t\t\t\t<div className={Styles.HeadTitle}>\n\t\t\t\t\t<span>Mission Internet</span>\n\t\t\t\t\t<div className={Styles.HeadTitleDropDown}>\n\t\t\t\t\t\t<select value={base?.id || 0} onChange={(e) => currentProject(e.currentTarget.value)}>\n\t\t\t\t\t\t\t{bases.map((o, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option key={o.id} value={o.id}>\n\t\t\t\t\t\t\t\t\t\t{o.name}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<ChevronDown style={{ marginLeft: -20 }} color={'#FFF'} size={18} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={Styles.HeadClose} onClick={_reset}>\n\t\t\t\t\t<X color={'#FFF'} size={16} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={Styles.HeadSearch}>\n\t\t\t\t<input\n\t\t\t\t\tid='searchtext'\n\t\t\t\t\ttype='search'\n\t\t\t\t\tplaceholder='Search....'\n\t\t\t\t\t//defaultValue={searchtext}\n\t\t\t\t\tonKeyDown={_searchChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/Search.js",["147","148","149","150","151","152","153"],"import React from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport Styles from './Search.module.css'\nimport { ArrowLeft } from 'react-feather'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Detail from './Detail'\nimport Loading from './component/Loading'\nimport Nodata from './component/Nodata'\n\nexport default function Header() {\n\t//const state = useTrackedState()\n\tconst dispatch = useDispatch()\n\n\tconst { searchresult, searchresultloading, notedetail, token, searchresultuuid, user } = {}\n\tconst _reset = () => {\n\t\tdispatch({ type: 'SET_PAGE', payload: 'HOME' })\n\t\tdispatch({ type: 'SEARCHRESULT', payload: [] })\n\t\tdispatch({ type: 'SETSEARCH', payload: '' })\n\t\tdispatch({ type: 'NOTEDETAIL', payload: {} })\n\t\tdispatch({ type: 'SEARCHRESULTUUID', payload: {} })\n\t\tdocument.getElementById('searchtext').value = ''\n\t}\n\tconst _getNoteDetail = async (item) => {\n\t\t//const response = await showNote(item.element_id)\n\t}\n\treturn (\n\t\t<div className={Styles.Search}>\n\t\t\t{notedetail.id ? (\n\t\t\t\t<Detail />\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className={Styles.SearchGoback}>\n\t\t\t\t\t\t<a href='javascript:void(0)' onClick={_reset}>\n\t\t\t\t\t\t\t<ArrowLeft color={'#3575d3'} size={18} style={{ marginRight: 10 }} />\n\t\t\t\t\t\t\tGo Back\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{searchresult.length === 0 && searchresultloading ? <Loading /> : null}\n\t\t\t\t\t{searchresult.length === 0 && searchresultloading === false ? <Nodata /> : null}\n\t\t\t\t\t{searchresult.map((o, i) => {\n\t\t\t\t\t\tif (o.element_type === 'note') {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className={Styles.SearchRow} onClick={() => _getNoteDetail(o)}>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={Styles.SearchRowTitle}\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t__html: o.title.replace(/<[^>]*>\\s*<\\/[^>]*>/g, '')\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={Styles.SearchRowDescription}\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t__html: o.content.replace(/<[^>]*>\\s*<\\/[^>]*>/g, '')\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null\n\t\t\t\t\t})}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/Login.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/Detail.js",["154","155","156","157","158","159","160","161","162","163"],"import React from 'react'\nimport { X, Copy, CheckCircle, AlertCircle, ThumbsUp, ThumbsDown, Link, ArrowLeft, ExternalLink } from 'react-feather'\nimport ReactTooltip from 'react-tooltip'\nimport toast, { Toaster } from 'react-hot-toast'\nimport Styles from './Detail.module.css'\nimport PreviewEditor from './editor/PreviewEditor'\nimport { useDispatch } from 'react-redux'\n\n//import { useTrackedState, useDispatch } from './context/Store'\n\nimport { copylink, copyRichText } from './utils/Helper'\n\nexport default function Detail() {\n\t//const state = useTrackedState()\n\tconst dispatch = useDispatch()\n\n\tconst { notedetail, searchresultuuid, user, token } = {}\n\tconst _reset = () => {\n\t\tdispatch({ type: 'NOTEDETAIL', payload: {} })\n\t}\n\tconst tracking = (action) => {\n\t\tif (searchresultuuid['uuid']) {\n\t\t\t// const projectId = user.current_project\n\t\t\t// const postdata = {\n\t\t\t// \tuid: searchresultuuid['uuid'] || '',\n\t\t\t// \tkeyword: searchresultuuid['keyword'] || '',\n\t\t\t// \tnote_id: notedetail.id,\n\t\t\t// \tchannel_id: notedetail.channel_id,\n\t\t\t// \taction: action\n\t\t\t// }\n\t\t\t// track(projectId, postdata)\n\t\t}\n\t}\n\tconst _copytext = async () => {\n\t\t// const html = document.getElementById(notedetail.id).innerHTML\n\t\t// copyRichText(html)\n\t\t// await noteCopy(notedetail.id)\n\t\t// tracking('copied')\n\t\t// toast.success('Content copied...')\n\t}\n\tconst _linkopen = async () => {\n\t\t// await copylink(notedetail)\n\t\t// tracking('open')\n\t\t// toast.success('Note opened...')\n\t}\n\tconst _thumpup = async () => {\n\t\t// await noteUpvote(notedetail.channel_id, notedetail.id)\n\t\t// tracking('upvote')\n\t\t// toast.success('Note upvoted...')\n\t}\n\tconst _thumpdown = async () => {\n\t\t// await noteDownvote(notedetail.channel_id, notedetail.id)\n\t\t// tracking('downvote')\n\t\t// toast.success('Note downvoted...')\n\t}\n\tReact.useEffect(() => {\n\t\ttracking('open')\n\t}, [])\n\treturn (\n\t\t<div className={Styles.Detail} style={{ display: notedetail.id ? 'block' : 'none' }}>\n\t\t\t<div className={Styles.DetailContainer}>\n\t\t\t\t<div className={Styles.DetailContainerbox}>\n\t\t\t\t\t<div className={Styles.Goback}>\n\t\t\t\t\t\t<a href='javascript:void(0)' onClick={_reset}>\n\t\t\t\t\t\t\t<ArrowLeft color={'#3575d3'} size={18} style={{ marginRight: 10 }} />\n\t\t\t\t\t\t\tGo Back\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t{notedetail.title}{' '}\n\t\t\t\t\t\t{notedetail.verification === 'unverified' ? (\n\t\t\t\t\t\t\t<AlertCircle size={18} color={'red'} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<CheckCircle size={18} color={'green'} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</h4>\n\t\t\t\t\t<PreviewEditor id={notedetail.id} initialValue={JSON.parse(notedetail.content)} />\n\t\t\t\t</div>\n\n\t\t\t\t<Toaster\n\t\t\t\t\tcontainerStyle={{\n\t\t\t\t\t\tposition: 'absolute'\n\t\t\t\t\t}}\n\t\t\t\t\ttoastOptions={{\n\t\t\t\t\t\tclassName: '',\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\t\tright: '80px',\n\t\t\t\t\t\t\ttop: '100px'\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={Styles.Footer}>\n\t\t\t\t<div data-tip data-for='copied' className={Styles.Icon} onClick={() => _copytext()}>\n\t\t\t\t\t<Copy size={18} color={'#000'} />\n\t\t\t\t</div>\n\t\t\t\t<ReactTooltip id='copied' place='top' effect='float'>\n\t\t\t\t\t<span>Copy Note</span>\n\t\t\t\t</ReactTooltip>\n\t\t\t\t<div data-tip data-for='link' className={Styles.Icon} onClick={() => _linkopen()}>\n\t\t\t\t\t<ExternalLink size={18} color={'#000'} />\n\t\t\t\t</div>\n\t\t\t\t<ReactTooltip id='link' place='top' effect='float'>\n\t\t\t\t\t<span>Open Link</span>\n\t\t\t\t</ReactTooltip>\n\t\t\t\t<div data-tip data-for='thumpsup' className={Styles.Icon} onClick={() => _thumpup()}>\n\t\t\t\t\t<ThumbsUp size={18} color={'#000'} />\n\t\t\t\t</div>\n\t\t\t\t<ReactTooltip id='thumpsup' place='top' effect='float'>\n\t\t\t\t\t<span>Was Useful</span>\n\t\t\t\t</ReactTooltip>\n\t\t\t\t<div data-tip data-for='thumpsdown' className={Styles.Icon} onClick={() => _thumpdown()}>\n\t\t\t\t\t<ThumbsDown size={18} color={'#000'} />\n\t\t\t\t</div>\n\t\t\t\t<ReactTooltip id='thumpsdown' place='top' effect='float'>\n\t\t\t\t\t<span>Not Useful</span>\n\t\t\t\t</ReactTooltip>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/utils/Helper.js",["164"],"/* eslint-disable no-undef */\nimport toast from 'react-hot-toast'\n// import { useTrackedState } from '../context/Store'\n\nexport const copylink = (note) => {\n\tconst name = note.title.replace(/[\\W_]+/g, '-').toLowerCase()\n\tconst str = `https://wiki.app/note/${note.id}/${name}`\n\tcopytext(str)\n\ttoast.success('Link Copied...')\n\twindow.open(str, '_blank')\n}\nexport function copyRichText(text) {\n\tconst listener = function (ev) {\n\t\tev.preventDefault()\n\t\tev.clipboardData.setData('text/html', text)\n\t\tev.clipboardData.setData('text/plain', text)\n\t}\n\tdocument.addEventListener('copy', listener)\n\tdocument.execCommand('copy')\n\tdocument.removeEventListener('copy', listener)\n}\nexport const copytext = async (text) => {\n\tvar tempInput = document.createElement('input')\n\ttempInput.value = text\n\tdocument.body.appendChild(tempInput)\n\ttempInput.select()\n\tdocument.execCommand('copy')\n\tdocument.body.removeChild(tempInput)\n}\n\nexport const GetToken = () => {\n\tconst state = {} //useTrackedState()\n\treturn [state]\n}\nvar check\nexport const checkExtensionInstalled = async (extensionid) => {\n\t// window.clearTimeout(check);\n\t// const url = `chrome-extension://${extensionid}/bundle.min.js`;\n\t// try {\n\t//     const response = await fetch(url);\n\t//     if (response.status === 200) {\n\t//         check = window.setTimeout(() => {\n\t//             checkExtensionInstalled(extensionid);\n\t//         }, 2000);\n\t//     }\n\t// } catch (err) {\n\t//     check = window.setTimeout(() => {\n\t//         checkExtensionInstalled(extensionid);\n\t//     }, 2000);\n\t//     // const rootnode = document.querySelector(\"#wikiapp-root\");\n\t//     // const scriptnode = document.querySelector(\"#wikiapp-bundle\");\n\t//     // if (rootnode) {\n\t//     //     rootnode.remove();\n\t//     // }\n\t//     // if (scriptnode) {\n\t//     //     scriptnode.remove();\n\t//     // }\n\t//     // document.querySelectorAll(\"script[id*=wikiapp-bundle]\").forEach((e, i) => {\n\t//     //     e.remove();\n\t//     // });\n\t// }\n}\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/component/Loading.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/component/Nodata.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/editor/PreviewEditor.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/editor/Helper.js",["165","166","167","168"],"import { jsx } from 'slate-hyperscript'\nimport { Editor, Transforms, createEditor, Node, Range, Text, Point, Element } from 'slate'\nimport imageExtensions from 'image-extensions'\nimport isUrl from 'is-url'\nimport Styles from './editor.module.less'\n\nconst ELEMENT_TAGS = {\n\tA: (el) => ({ type: 'link', url: el.getAttribute('href') }),\n\tBLOCKQUOTE: () => ({ type: 'block-quote' }),\n\tH1: () => ({ type: 'heading-one' }),\n\tH2: () => ({ type: 'heading-two' }),\n\tH3: () => ({ type: 'heading-three' }),\n\tH4: () => ({ type: 'heading-four' }),\n\tH5: () => ({ type: 'heading-five' }),\n\tH6: () => ({ type: 'heading-six' }),\n\tIMG: (el) => ({ type: 'image', url: el.getAttribute('src'), file: [] }),\n\tLI: () => ({ type: 'list-item' }),\n\tOL: () => ({ type: 'numbered-list' }),\n\tP: () => ({ type: 'paragraph' }),\n\tPRE: () => ({ type: 'code' }),\n\tUL: () => ({ type: 'bulleted-list' })\n}\nconst TEXT_TAGS = {\n\tCODE: () => ({ code: true }),\n\tDEL: () => ({ strikethrough: true }),\n\tEM: () => ({ italic: true }),\n\tI: () => ({ italic: true }),\n\tS: () => ({ strikethrough: true }),\n\tSTRONG: () => ({ bold: true }),\n\tU: () => ({ underline: true })\n}\nexport const deserialize = (el) => {\n\tif (el.nodeType === 3) {\n\t\treturn el.textContent\n\t} else if (el.nodeType !== 1) {\n\t\treturn null\n\t} else if (el.nodeName === 'BR') {\n\t\treturn '\\n'\n\t}\n\n\tconst { nodeName } = el\n\tlet parent = el\n\n\tif (nodeName === 'PRE' && el.childNodes[0] && el.childNodes[0].nodeName === 'CODE') {\n\t\tparent = el.childNodes[0]\n\t}\n\tconst children = Array.from(parent.childNodes).map(deserialize).flat()\n\n\tif (el.nodeName === 'BODY') {\n\t\treturn jsx('fragment', {}, children)\n\t}\n\n\tif (ELEMENT_TAGS[nodeName]) {\n\t\tconst attrs = ELEMENT_TAGS[nodeName](el)\n\t\treturn jsx('element', attrs, children)\n\t}\n\n\tif (TEXT_TAGS[nodeName]) {\n\t\tconst attrs = TEXT_TAGS[nodeName](el)\n\t\treturn children.filter((child) => Text.isText(child)).map((child) => jsx('text', attrs, child))\n\t}\n\n\treturn children\n}\nexport const withHtml = (editor) => {\n\tconst { insertData, isInline, isVoid } = editor\n\n\teditor.isInline = (element) => {\n\t\treturn element.type === 'link' ? true : isInline(element)\n\t}\n\n\teditor.isVoid = (element) => {\n\t\treturn element.type === 'image' ? true : isVoid(element)\n\t}\n\n\teditor.insertData = (data) => {\n\t\tconst html = data.getData('text/html')\n\n\t\tif (html) {\n\t\t\tconst parsed = new DOMParser().parseFromString(html, 'text/html')\n\t\t\tconst fragment = deserialize(parsed.body)\n\t\t\tTransforms.insertFragment(editor, fragment)\n\t\t\treturn\n\t\t}\n\n\t\tinsertData(data)\n\t}\n\n\treturn editor\n}\n\nexport const withMentions = (editor) => {\n\tconst { isInline, isVoid } = editor\n\n\teditor.isInline = (element) => {\n\t\treturn element.type === 'mention' ? true : isInline(element)\n\t}\n\n\teditor.isVoid = (element) => {\n\t\treturn element.type === 'mention' ? true : isVoid(element)\n\t}\n\n\treturn editor\n}\n\nconst SHORTCUTS = {\n\t'*': 'list-item',\n\t'-': 'list-item',\n\t'+': 'list-item',\n\t'>': 'block-quote',\n\t'#': 'heading-one',\n\t'##': 'heading-two',\n\t'###': 'heading-three',\n\t'####': 'heading-four',\n\t'#####': 'heading-five',\n\t'######': 'heading-six'\n}\n\nexport const withShortcuts = (editor) => {\n\tconst { deleteBackward, insertText } = editor\n\n\teditor.insertText = (text) => {\n\t\tconst { selection } = editor\n\n\t\tif (text === ' ' && selection && Range.isCollapsed(selection)) {\n\t\t\tconst { anchor } = selection\n\t\t\tconst block = Editor.above(editor, {\n\t\t\t\tmatch: (n) => Editor.isBlock(editor, n)\n\t\t\t})\n\t\t\tconst path = block ? block[1] : []\n\t\t\tconst start = Editor.start(editor, path)\n\t\t\tconst range = { anchor, focus: start }\n\t\t\tconst beforeText = Editor.string(editor, range)\n\t\t\tconst type = SHORTCUTS[beforeText]\n\n\t\t\tif (type) {\n\t\t\t\tTransforms.select(editor, range)\n\t\t\t\tTransforms.delete(editor)\n\t\t\t\tTransforms.setNodes(editor, { type }, { match: (n) => Editor.isBlock(editor, n) })\n\n\t\t\t\tif (type === 'list-item') {\n\t\t\t\t\tconst list = { type: 'bulleted-list', children: [] }\n\t\t\t\t\tTransforms.wrapNodes(editor, list, {\n\t\t\t\t\t\tmatch: (n) => n.type === 'list-item'\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\tinsertText(text)\n\t}\n\n\teditor.deleteBackward = (...args) => {\n\t\tconst { selection } = editor\n\n\t\tif (selection && Range.isCollapsed(selection)) {\n\t\t\tconst match = Editor.above(editor, {\n\t\t\t\tmatch: (n) => Editor.isBlock(editor, n)\n\t\t\t})\n\n\t\t\tif (match) {\n\t\t\t\tconst [block, path] = match\n\t\t\t\tconst start = Editor.start(editor, path)\n\n\t\t\t\tif (block.type !== 'paragraph' && Point.equals(selection.anchor, start)) {\n\t\t\t\t\tTransforms.setNodes(editor, { type: 'paragraph' })\n\n\t\t\t\t\tif (block.type === 'list-item') {\n\t\t\t\t\t\tTransforms.unwrapNodes(editor, {\n\t\t\t\t\t\t\tmatch: (n) => n.type === 'bulleted-list',\n\t\t\t\t\t\t\tsplit: true\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdeleteBackward(...args)\n\t\t}\n\t}\n\n\treturn editor\n}\n\nexport const withChecklists = (editor) => {\n\tconst { deleteBackward } = editor\n\n\teditor.deleteBackward = (...args) => {\n\t\tconst { selection } = editor\n\n\t\tif (selection && Range.isCollapsed(selection)) {\n\t\t\tconst [match] = Editor.nodes(editor, {\n\t\t\t\tmatch: (n) => n.type === 'check-list-item'\n\t\t\t})\n\n\t\t\tif (match) {\n\t\t\t\tconst [, path] = match\n\t\t\t\tconst start = Editor.start(editor, path)\n\n\t\t\t\tif (Point.equals(selection.anchor, start)) {\n\t\t\t\t\tTransforms.setNodes(editor, { type: 'paragraph' }, { match: (n) => n.type === 'check-list-item' })\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdeleteBackward(...args)\n\t}\n\n\treturn editor\n}\n\nexport const withEmojis = (editor) => {\n\tconst { isInline, isVoid } = editor\n\n\teditor.isInline = (element) => {\n\t\treturn element.type === 'emoji' ? true : isInline(element)\n\t}\n\n\teditor.isVoid = (element) => {\n\t\treturn element.type === 'emoji' ? true : isVoid(element)\n\t}\n\n\treturn editor\n}\nconst insertImage = (editor, url) => {\n\tconst text = { text: '' }\n\tconst image = { type: 'image', url, children: [text] }\n\tTransforms.insertNodes(editor, image)\n}\nexport const withImages = (editor) => {\n\tconst { insertData, isVoid } = editor\n\n\teditor.isVoid = (element) => {\n\t\treturn element.type === 'image' ? true : isVoid(element)\n\t}\n\n\teditor.insertData = (data) => {\n\t\tconst text = data.getData('text/plain')\n\t\tconst { files } = data\n\n\t\tif (files && files.length > 0) {\n\t\t\tfor (const file of files) {\n\t\t\t\tconst reader = new FileReader()\n\t\t\t\tconst [mime] = file.type.split('/')\n\n\t\t\t\tif (mime === 'image') {\n\t\t\t\t\treader.addEventListener('load', () => {\n\t\t\t\t\t\tconst url = reader.result\n\t\t\t\t\t\tinsertImage(editor, url)\n\t\t\t\t\t})\n\n\t\t\t\t\treader.readAsDataURL(file)\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isImageUrl(text)) {\n\t\t\tinsertImage(editor, text)\n\t\t} else {\n\t\t\tinsertData(data)\n\t\t}\n\t}\n\n\treturn editor\n}\nconst isImageUrl = (url) => {\n\tif (!url) return false\n\tif (!isUrl(url)) return false\n\tconst ext = new URL(url).pathname.split('.').pop()\n\treturn imageExtensions.includes(ext)\n}\n\nexport const withUploads = (editor) => {\n\tconst { insertData, isVoid } = editor\n\n\teditor.isVoid = (element) => {\n\t\treturn element.type === 'upload' ? true : isVoid(element)\n\t}\n\n\treturn editor\n}\n\n/* Tables */\n\nexport const withTables = (editor) => {\n\tconst { deleteBackward, deleteForward, insertBreak } = editor\n\n\teditor.deleteBackward = (unit) => {\n\t\tconst { selection } = editor\n\n\t\tif (selection && Range.isCollapsed(selection)) {\n\t\t\tconst [cell] = Editor.nodes(editor, {\n\t\t\t\tmatch: (n) => !Editor.isEditor(n) && Element.isElement(n) && n.type === 'table-cell'\n\t\t\t})\n\n\t\t\tif (cell) {\n\t\t\t\tconst [, cellPath] = cell\n\t\t\t\tconst start = Editor.start(editor, cellPath)\n\n\t\t\t\tif (Point.equals(selection.anchor, start)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdeleteBackward(unit)\n\t}\n\n\teditor.deleteForward = (unit) => {\n\t\tconst { selection } = editor\n\n\t\tif (selection && Range.isCollapsed(selection)) {\n\t\t\tconst [cell] = Editor.nodes(editor, {\n\t\t\t\tmatch: (n) => !Editor.isEditor(n) && Element.isElement(n) && n.type === 'table-cell'\n\t\t\t})\n\n\t\t\tif (cell) {\n\t\t\t\tconst [, cellPath] = cell\n\t\t\t\tconst end = Editor.end(editor, cellPath)\n\n\t\t\t\tif (Point.equals(selection.anchor, end)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdeleteForward(unit)\n\t}\n\n\teditor.insertBreak = () => {\n\t\tconst { selection } = editor\n\n\t\tif (selection) {\n\t\t\tconst [table] = Editor.nodes(editor, {\n\t\t\t\tmatch: (n) => !Editor.isEditor(n) && Element.isElement(n) && n.type === 'table'\n\t\t\t})\n\n\t\t\tif (table) {\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\tinsertBreak()\n\t}\n\n\treturn editor\n}\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/editor/functions.js",["169"],"import escapeHtml from 'escape-html'\nimport { Node, Text } from 'slate'\nimport {\n\tEmojiElement,\n\tMentionElement,\n\tFileElement,\n\tImageElement,\n\tCheckListItemElement,\n\tImageUpload,\n\tVideoUpload,\n\tAudioUpload\n} from './Element'\n\nexport const serialize = (node) => {\n\tif (Text.isText(node)) {\n\t\tif (node.bold) {\n\t\t\treturn `<strong>${node.text}</strong>`\n\t\t}\n\t\tif (node.underline) {\n\t\t\treturn `<u>${node.text}</u>`\n\t\t}\n\t\tif (node.italic) {\n\t\t\treturn `<em>${node.text}</em>`\n\t\t}\n\t\treturn escapeHtml(node.text)\n\t}\n\n\tconst children = node.children.map((n) => serialize(n)).join('')\n\n\tswitch (node.type) {\n\t\tcase 'block-quote':\n\t\t\treturn `<blockquote><p>${children}</p></blockquote>`\n\t\tcase 'code':\n\t\t\treturn `<pre><code>${children}</code></pre>`\n\t\tcase 'heading-one':\n\t\t\treturn `<h1>${children}</h1>`\n\t\tcase 'heading-two':\n\t\t\treturn `<h2>${children}</h2>`\n\t\tcase 'heading-three':\n\t\t\treturn `<h3>${children}</h3>`\n\t\tcase 'heading-four':\n\t\t\treturn `<h4>${children}</h4>`\n\t\tcase 'heading-five':\n\t\t\treturn `<h5>${children}</h5>`\n\t\tcase 'heading-six':\n\t\t\treturn `<h6>${children}</h6>`\n\t\tcase 'paragraph':\n\t\t\treturn `<p>${children}</p>`\n\t\tcase 'bulleted-list':\n\t\t\treturn `<ul>${children}</ul>`\n\t\tcase 'list-item':\n\t\t\treturn `<ul>${children}</ul>`\n\t\tcase 'numbered-list':\n\t\t\treturn `<ol>${children}</ol>`\n\t\tcase 'link':\n\t\t\treturn `<a href=\"${escapeHtml(node.url)}\">{children}</a>`\n\t\t// case 'image':\n\t\t// \treturn <ImageElement {...props} />\n\t\t// case 'check-list-item':\n\t\t// \treturn <CheckListItemElement {...props} />\n\t\t// case 'table':\n\t\t// \treturn `<table><tbody {...attributes}>{children}</tbody></table>`\n\t\t// case 'table-row':\n\t\t// \treturn <tr {...attributes}>{children}</tr>\n\t\t// case 'table-cell':\n\t\t// \treturn <td {...attributes}>{children}</td>\n\t\t// case 'upload':\n\t\t// \treturn <FileElement {...props} />\n\t\t// case 'mention':\n\t\t// \treturn <MentionElement {...props} />\n\t\t// case 'emoji':\n\t\t// \treturn <EmojiElement {...props} />\n\t\tdefault:\n\t\t\treturn `<div>${children}</div>`\n\t}\n}\n\nexport const Element = (props) => {\n\tconst { attributes, children, element } = props\n\tswitch (element.type) {\n\t\tcase 'block-quote':\n\t\t\treturn <blockquote {...attributes}>{children}</blockquote>\n\t\tcase 'code':\n\t\t\treturn (\n\t\t\t\t<pre>\n\t\t\t\t\t<code {...attributes}>{children}</code>\n\t\t\t\t</pre>\n\t\t\t)\n\t\tcase 'heading-one':\n\t\t\treturn (\n\t\t\t\t<h1 style={{ fontSize: '1.8em' }} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h1>\n\t\t\t)\n\t\tcase 'heading-two':\n\t\t\treturn <h2 {...attributes}>{children}</h2>\n\t\tcase 'heading-three':\n\t\t\treturn <h3 {...attributes}>{children}</h3>\n\t\tcase 'heading-four':\n\t\t\treturn <h4 {...attributes}>{children}</h4>\n\t\tcase 'heading-five':\n\t\t\treturn <h5 {...attributes}>{children}</h5>\n\t\tcase 'heading-six':\n\t\t\treturn <h6 {...attributes}>{children}</h6>\n\t\tcase 'paragraph':\n\t\t\treturn <p {...attributes}>{children}</p>\n\t\tcase 'bulleted-list':\n\t\t\treturn <ul {...attributes}>{children}</ul>\n\t\tcase 'list-item':\n\t\t\treturn <li {...attributes}>{children}</li>\n\t\tcase 'numbered-list':\n\t\t\treturn <ol {...attributes}>{children}</ol>\n\t\tcase 'link':\n\t\t\treturn (\n\t\t\t\t<a href={element.url} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</a>\n\t\t\t)\n\t\tcase 'image':\n\t\t\treturn <ImageElement {...props} />\n\t\tcase 'check-list-item':\n\t\t\treturn <CheckListItemElement {...props} />\n\t\tcase 'table':\n\t\t\treturn (\n\t\t\t\t<table>\n\t\t\t\t\t<tbody {...attributes}>{children}</tbody>\n\t\t\t\t</table>\n\t\t\t)\n\t\tcase 'table-row':\n\t\t\treturn <tr {...attributes}>{children}</tr>\n\t\tcase 'table-cell':\n\t\t\treturn <td {...attributes}>{children}</td>\n\t\tcase 'upload':\n\t\t\treturn <FileElement {...props} />\n\t\tcase 'image-upload':\n\t\t\treturn <ImageUpload {...props} />\n\t\tcase 'video-upload':\n\t\t\treturn <VideoUpload {...props} />\n\t\tcase 'audio-upload':\n\t\t\treturn <AudioUpload {...props} />\n\t\tcase 'mention':\n\t\t\treturn <MentionElement {...props} />\n\t\tcase 'emoji':\n\t\t\treturn <EmojiElement {...props} />\n\t\tdefault:\n\t\t\treturn <div {...attributes}>{children}</div>\n\t}\n}\n\nexport const Leaf = ({ attributes, children, leaf }) => {\n\tif (leaf.bold) {\n\t\tchildren = <strong>{children}</strong>\n\t}\n\n\tif (leaf.code) {\n\t\tchildren = <code>{children}</code>\n\t}\n\n\tif (leaf.italic) {\n\t\tchildren = <em>{children}</em>\n\t}\n\n\tif (leaf.underline) {\n\t\tchildren = <u>{children}</u>\n\t}\n\n\tif (leaf.strikethrough) {\n\t\tchildren = <del>{children}</del>\n\t}\n\n\treturn <span {...attributes}>{children}</span>\n}\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/editor/Element.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/store.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/BaseSlice.js",["170"],"/** @format */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axios, { DOMAIN } from './config'\n\nexport const switchBase = createAsyncThunk('base/switchBase', async ({ baseId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/base/${baseId}/switch`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const listBase = createAsyncThunk('base/listBase', async ({}, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/base`\n\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const baseById = createAsyncThunk('base/baseById', async ({ baseId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/base/${baseId}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const baseMembers = createAsyncThunk('base/baseMembers', async ({ baseId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/base/${baseId}/members`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getBaseHomeElement = createAsyncThunk('base/getBaseHomeElement', async ({ baseId, page }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/base/${baseId}/home?page=${page}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getBaseStarredElement = createAsyncThunk(\n\t'base/getBaseStarredElement',\n\tasync ({ baseId, page = 1 }, thunkAPI) => {\n\t\ttry {\n\t\t\tconst URL = `${DOMAIN}/v1/base/${baseId}/starred?page=${page}`\n\t\t\tconst response = await axios.get(URL)\n\t\t\tif (response.status === 200) {\n\t\t\t\treturn response.data\n\t\t\t} else {\n\t\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t\t}\n\t}\n)\n\nexport const getBaseDraftsElement = createAsyncThunk(\n\t'base/getBaseDraftsElement',\n\tasync ({ baseId, page }, thunkAPI) => {\n\t\ttry {\n\t\t\tconst URL = `${DOMAIN}/v1/base/${baseId}/drafts?page=${page}`\n\t\t\tconst response = await axios.get(URL)\n\t\t\tif (response.status === 200) {\n\t\t\t\treturn response.data\n\t\t\t} else {\n\t\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t\t}\n\t}\n)\n\nexport const getBaseActivity = createAsyncThunk('base/getBaseActivity', async ({ baseId, page, filter }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/base/${baseId}/activity?page=${page}&filter=${filter}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nconst paginationObj = {\n\tpage: 1,\n\ttotal: 0,\n\tloading: true,\n\thasmore: true,\n\trefreshing: false\n}\n\nexport const baseSlice = createSlice({\n\tname: 'base',\n\tinitialState: {\n\t\tbases: [],\n\t\tbase: {},\n\t\tbasetags: {},\n\t\tbasemembers: {},\n\t\tbaseinvites: {},\n\t\tbaseattributes: {},\n\t\tbasehome: {},\n\t\tbasehomepagination: paginationObj,\n\t\tbasedrafts: {},\n\t\tbasedraftspagination: paginationObj,\n\t\tbasestarred: {},\n\t\tbasestarredpagination: paginationObj,\n\t\tbaseactivity: {},\n\t\tbaseactivitypagination: paginationObj\n\t},\n\treducers: {\n\t\tsetBases: (state, { payload }) => {\n\t\t\tstate.bases = payload.data\n\t\t},\n\t\tsetBase: (state, { payload }) => {\n\t\t\tstate.base = payload.data\n\t\t},\n\t\tsetBaseMembers: (state, { payload }) => {\n\t\t\tstate.basemembers = payload.data\n\t\t}\n\t},\n\textraReducers: {\n\t\t[listBase.fulfilled]: (state, { payload }) => {\n\t\t\tstate.bases = payload.data.bases\n\t\t\treturn state\n\t\t},\n\t\t[baseMembers.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.basemembers[arg.baseId] = payload.data.baseMembers\n\t\t\treturn state\n\t\t},\n\t\t[getBaseHomeElement.pending]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tif (!state.basehome[arg.baseId]) state.basehome[arg.baseId] = []\n\n\t\t\tstate.basehomepagination = {\n\t\t\t\t...state.basehomepagination,\n\t\t\t\tloading: true\n\t\t\t}\n\t\t\treturn state\n\t\t},\n\t\t[getBaseHomeElement.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.basehome[arg.baseId] = arg.page === 1 ? payload.data.data : [...state.basehome[arg.baseId], ...payload.data.data]\n\t\t\tstate.basehomepagination = {\n\t\t\t\t...state.basehomepagination,\n\t\t\t\tpage: arg.page + 1,\n\t\t\t\tloading: false,\n\t\t\t\ttotal: payload.data.total\n\t\t\t}\n\t\t\treturn state\n\t\t},\n\t\t[getBaseStarredElement.pending]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tif (!state.basestarred[arg.baseId]) state.basestarred[arg.baseId] = []\n\t\t\tstate.basestarredpagination = {\n\t\t\t\t...state.basestarredpagination,\n\t\t\t\tloading: true\n\t\t\t}\n\t\t\treturn state\n\t\t},\n\t\t[getBaseStarredElement.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.basestarred[arg.baseId] = arg.page === 1 ? payload.data.data : [...state.basestarred[arg.baseId], ...payload.data.data]\n\t\t\tstate.basestarredpagination = {\n\t\t\t\t...state.basestarredpagination,\n\t\t\t\tpage: arg.page + 1,\n\t\t\t\tloading: false,\n\t\t\t\ttotal: payload.data.total\n\t\t\t}\n\t\t\treturn state\n\t\t},\n\t\t[getBaseDraftsElement.pending]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tif (!state.basedrafts[arg.baseId]) state.basedrafts[arg.baseId] = []\n\t\t\tstate.basedraftspagination = {\n\t\t\t\t...state.basedraftspagination,\n\t\t\t\tloading: true\n\t\t\t}\n\t\t\treturn state\n\t\t},\n\t\t[getBaseDraftsElement.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.basedrafts[arg.baseId] = arg.page === 1 ? payload.data.data : [...state.basedrafts[arg.baseId], ...payload.data.data]\n\t\t\tstate.basedraftspagination = {\n\t\t\t\t...state.basedraftspagination,\n\t\t\t\tpage: arg.page + 1,\n\t\t\t\tloading: false,\n\t\t\t\ttotal: payload.data.total\n\t\t\t}\n\t\t\treturn state\n\t\t},\n\t\t[getBaseActivity.pending]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tif (!state.baseactivity[arg.baseId]) state.baseactivity[arg.baseId] = []\n\t\t\tstate.baseactivitypagination = {\n\t\t\t\t...state.baseactivitypagination,\n\t\t\t\tpage: arg.page,\n\t\t\t\tloading: true\n\t\t\t}\n\t\t\tstate.baseactivity[arg.baseId] = arg.page === 1 ? [] : [...state.baseactivity[arg.baseId]]\n\t\t\treturn state\n\t\t},\n\t\t[getBaseActivity.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.baseactivitypagination = {\n\t\t\t\t...state.baseactivitypagination,\n\t\t\t\tpage: arg.page + 1,\n\t\t\t\tloading: false,\n\t\t\t\ttotal: payload.data.total\n\t\t\t}\n\n\t\t\tstate.baseactivity[arg.baseId] = arg.page === 1 ? payload.data.data : [...state.baseactivity[arg.baseId], ...payload.data.data]\n\n\t\t\treturn state\n\t\t}\n\t}\n})\n\nexport const { setPage, setHasMore, setLoadMore, setBase, setBases, setBaseMembers } = baseSlice.actions\n\nexport const baseSelector = (state) => state.base\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/ChannelSlice.js",["171","172","173"],"/** @format */\n\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axios, { DOMAIN } from './config'\n\n\nexport const browseChannel = createAsyncThunk('channel/browseChannel', async ({ baseId, type = 'all', query = '', page = 1 }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/base/${baseId}/channels?type=${type}&query=${query}&page=${page}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const createChannel = createAsyncThunk('channel/createChannel', async ({ baseId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/base/${baseId}/channel`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getChannel = createAsyncThunk('channel/getChannel', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const listChannel = createAsyncThunk('channel/listChannel', async ({ baseId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/base/${baseId}/channel/me`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const listChannelMembers = createAsyncThunk('channel/listChannelMembers', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/members`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\n\nexport const listChannelAttachments = createAsyncThunk('channel/listChannelAttachments', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/attachments`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const listQuickReplies = createAsyncThunk('channel/listQuickReplies', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/quickReplies`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateChannelDetail = createAsyncThunk('channel/updateChannelDetail', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const leaveChannel = createAsyncThunk('channel/leaveChannel', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/leave`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const joinChannel = createAsyncThunk('channel/joinChannel', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/join`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const archiveChannel = createAsyncThunk('channel/archiveChannel', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/archive`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateChannelPrivacy = createAsyncThunk('channel/updateChannelPrivacy', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/privacy`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getChannelMemberInvitations = createAsyncThunk('channel/getChannelMemberInvitations', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/invitations`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const sendChannelMemberInvite = createAsyncThunk('channel/sendChannelMemberInvite', async ({ baseId, channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/base/${baseId}/channel/${channelId}/invite`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const deleteChannelMemberInvite = createAsyncThunk('channel/deleteChannelMemberInvite', async ({ channelId, memberId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/invitation/${memberId}`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const deleteChannelMember = createAsyncThunk('channel/deleteChannelMember', async ({ channelId, memberId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/member/${memberId}`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateChannelMemberRole = createAsyncThunk('channel/updateChannelMemberRole', async ({ channelId, memberId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/member/${memberId}`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getAutoReply = createAsyncThunk('channel/getAutoReply', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/autoreply`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const autoReplyUpdate = createAsyncThunk('channel/autoReplyUpdate', async ({ channelId, autoreplyId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/autoreply/${autoreplyId}`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateQuickReplies = createAsyncThunk('channel/updateQuickReplies', async ({ channelId, quickReplyId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/quickReply/${quickReplyId}`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const createQuickReplies = createAsyncThunk('channel/createQuickReplies', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/quickreply`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const deleteQuickReplies = createAsyncThunk('channel/deleteQuickReplies', async ({ channelId, quickReplyId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/quickReply/${quickReplyId}`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getQuickReplies = createAsyncThunk('channel/getQuickReplies', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/quickReplies`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateChannelAttachment = createAsyncThunk('channel/updateChannelAttachment', async ({ channelId, attachmentId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/attachment/${attachmentId}`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const removeChannelAttachment = createAsyncThunk('channel/removeChannelAttachment', async ({ channelId, attachmentId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/attachment/${attachmentId}`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getSignature = createAsyncThunk('channel/getSignature', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/setting/signature`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const createSignature = createAsyncThunk('channel/createSignature', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/setting/signature`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const channelWhatsappSetting = createAsyncThunk('channel/channelWhatsappSetting', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/setting/whatsapp`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updatechannelWhatsappSetting = createAsyncThunk('channel/updatechannelWhatsappSetting', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/setting/whatsapp`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getAnalytics = createAsyncThunk('channel/getAnalytics', async ({ channelId, startDate, endDate }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/analytics/${channelId}?startDate=${startDate}&endDate=${endDate}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getTicketOpenChannelId = createAsyncThunk('channel/getTicketOpenChannelId', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/analytics/${channelId}/open`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getWikiAnalytics = createAsyncThunk('channel/getWikiAnalytics', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/analytics/${channelId}/wiki`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getWikiAnalyticsElements = createAsyncThunk('channel/getWikiAnalyticsElements', async ({ channelId, status }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/analytics/${channelId}/wiki/${status}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\n\n//Sequences\n\nexport const listSequences = createAsyncThunk('channel/listSequences', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/sequences`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const createSequence = createAsyncThunk('channel/createSequence', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/sequence`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const deleteSequence = createAsyncThunk('channel/deleteSequence', async ({ channelId, sequenceId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/sequence/${sequenceId}`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateSequence = createAsyncThunk('channel/updateSequence', async ({ channelId, sequenceId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/sequence/${sequenceId}`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\n//Templates\n\nexport const listTemplate = createAsyncThunk('channel/listTemplate', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/templates`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const refreshTemplates = createAsyncThunk('channel/refreshTemplates', async ({ channelId, templateId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/templates/refresh`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateTemplate = createAsyncThunk('channel/updateTemplate', async ({ channelId, templateId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/template/${templateId}`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const createTemplate = createAsyncThunk('channel/createTemplate', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/template`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const deleteTemplate = createAsyncThunk('channel/deleteTemplate', async ({ channelId, templateId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/template/${templateId}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const autoReplyStatus = createAsyncThunk('channel/autoReplyStatus', async ({ channelId, autoreplyId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/autoreply/${autoreplyId}/status`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const uploadFile = createAsyncThunk('channel/uploadFile', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/file/upload`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\nexport const channelSlice = createSlice({\n\tname: 'channel',\n\tinitialState: {\n\t\tchannel: {},\n\t\tchannels: {},\n\t\tchannelmembs: {},\n\t\tchannelquickreplies: {},\n\t\tchannelattachments: {},\n\t\tchannelsequences: {},\n\t\tchanneltemplates: {},\n\t\tchannelsignature: {}\n\t},\n\treducers: {\n\t\tsetChannels: (state, { payload }) => {\n\t\t\tstate.channels = payload.data\n\t\t},\n\t\tsetChannel: (state, { payload }) => {\n\t\t\tstate.channel = payload.data\n\t\t},\n\t\tsetChannelAttachment: (state, { payload }) => {\n\t\t\tif (!state.channelattachments[payload.channelId]) state.channelattachments[payload.channelId] = []\n\t\t\tstate.channelattachments[payload.channelId] = [payload.data, ...state.channelattachments[payload.channelId]]\n\t\t}\n\t},\n\textraReducers: {\n\t\t[listChannel.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channels[arg.baseId] = payload.data.channels\n\t\t\tstate.channelmembs[arg.baseId] = payload.data.members\n\t\t\treturn state\n\t\t},\n\t\t[getChannel.fulfilled]: (state, { payload, meta }) => {\n\t\t\tstate.channel = payload.data.channel\n\t\t\treturn state\n\t\t},\n\t\t[listChannelAttachments.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channelattachments[arg.channelId] = payload.data.attachments\n\t\t\treturn state\n\t\t},\n\t\t[listSequences.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channelsequences[arg.channelId] = payload.data.sequences\n\t\t\treturn state\n\t\t},\n\t\t[updateSequence.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channelsequences[arg.channelId] = (state.channelsequences[arg.channelId] || []).map((o) =>\n\t\t\t\to.id === arg.sequenceId ? payload.data.sequence : o\n\t\t\t)\n\t\t\treturn state\n\t\t},\n\t\t[createSequence.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channelsequences[arg.channelId] = [payload.data.sequence, ...state.channelsequences[arg.channelId]]\n\t\t\treturn state\n\t\t},\n\t\t[deleteSequence.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channelsequences[arg.channelId] = (state.channelsequences[arg.channelId] || []).filter((o) => o.id !== arg.sequenceId)\n\t\t\treturn state\n\t\t},\n\t\t[listTemplate.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channeltemplates[arg.channelId] = payload.data.templates\n\t\t\treturn state\n\t\t},\n\t\t[refreshTemplates.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channeltemplates[arg.channelId] = payload.data.templates\n\t\t\treturn state\n\t\t},\n\t\t[updateTemplate.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channeltemplates[arg.channelId] = payload.data.templates\n\t\t\treturn state\n\t\t},\n\t\t[leaveChannel.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\t//state.channels[arg.baseId] = (state.channels[arg.baseId] || []).map((o, i) => o.id === arg.channelId ? { ...o, role: '' } : o)\n\t\t\tstate.channel = payload.data.channel\n\t\t\treturn state\n\t\t},\n\t\t[updateChannelPrivacy.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\t//state.channels[arg.baseId] = (state.channels[arg.baseId] || []).map((o, i) => o.id === arg.channelId ? { ...o, role: '' } : o)\n\t\t\tstate.channel = payload.data.channel\n\t\t\treturn state\n\t\t},\n\t\t[updateChannelDetail.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\t//state.channels[arg.baseId] = (state.channels[arg.baseId] || []).map((o, i) => o.id === arg.channelId ? { ...o, role: '' } : o)\n\t\t\tstate.channel = payload.data.channel\n\t\t\treturn state\n\t\t},\n\t\t[getSignature.pending]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tif (!state.channelsignature[arg.channelId]) state.channelsignature[arg.channelId] = {}\n\t\t\treturn state\n\t\t},\n\t\t[getSignature.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tconst { channelMemberSignature } = payload.data\n\t\t\tstate.channelsignature[arg.channelId] = channelMemberSignature\n\t\t\treturn state\n\t\t},\n\t\t[listQuickReplies.pending]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tif (!state.channelquickreplies[arg.channelId]) state.channelquickreplies[arg.channelId] = []\n\t\t\treturn state\n\t\t},\n\t\t[listQuickReplies.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channelquickreplies[arg.channelId] = payload.data.quickReplies\n\t\t\treturn state\n\t\t},\n\t\t[createQuickReplies.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channelquickreplies[arg.channelId] = [payload.data.quickReply, ...state.channelquickreplies[arg.channelId]]\n\t\t\treturn state\n\t\t},\n\t\t[updateQuickReplies.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channelquickreplies[arg.channelId] = (state.channelquickreplies[arg.channelId] || []).map((o) =>\n\t\t\t\to.id === arg.quickReplyId ? payload.data.quickReply : o\n\t\t\t)\n\t\t\treturn state\n\t\t},\n\t\t[deleteQuickReplies.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channelquickreplies[arg.channelId] = (state.channelquickreplies[arg.baseId] || []).filter((o) => o.id !== arg.quickReplyId)\n\t\t\treturn state\n\t\t},\n\t\t[sendChannelMemberInvite.pending]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tif (!state.channelinvites[arg.channelId]) state.channelinvites[arg.channelId] = []\n\t\t\treturn state\n\t\t},\n\t\t[sendChannelMemberInvite.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.channelinvites[arg.channelId] = [...state.channelinvites[arg.channelId]]\n\t\t\treturn state\n\t\t},\n\t\t[updateChannelAttachment.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tconst { attachment } = payload.data\n\t\t\tstate.channelattachments[arg.channelId] = (state.channelattachments[arg.channelId] || []).map((o, i) =>\n\t\t\t\to.id === arg.attachmentId ? attachment : o\n\t\t\t)\n\t\t\treturn state\n\t\t}\n\t}\n})\n\nexport const { setChannels, setChannel, setChannelAttachment } = channelSlice.actions\n\nexport const channelSelector = (state) => state.channel\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/WikiSlice.js",["174"],"/** @format */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axios, { DOMAIN } from './config'\n\nexport const createFolder = createAsyncThunk('wiki/createFolder', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/folder`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateFolder = createAsyncThunk('wiki/updateFolder', async ({ channelId, elementId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateFolderNote = createAsyncThunk('wiki/updateFolderNote', async ({ channelId, folderId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/folder/${folderId}/note`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e.response.data)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const createNote = createAsyncThunk('wiki/createNote', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateNote = createAsyncThunk('wiki/updateNote', async ({ channelId, noteId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\t//console.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateNoteDraft = createAsyncThunk('wiki/updateNoteDraft', async ({ channelId, noteId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/draft/note/${noteId}`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getElements = createAsyncThunk('wiki/getElements', async ({ channelId, parentId = 0, status = 'all', page = 1 }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/parent/${parentId}?status=${status}&page=${page}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getElement = createAsyncThunk('wiki/getElement', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementArchivedList = createAsyncThunk('wiki/elementArchivedList', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/archived`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementArchive = createAsyncThunk('wiki/elementArchive', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}/archive`\n\t\tconst response = await axios.put(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementUnarchive = createAsyncThunk('wiki/elementUnarchive', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}/archive`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementTrashList = createAsyncThunk('wiki/elementTrashList', async ({ channelId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/trash`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementTrash = createAsyncThunk('wiki/elementTrash', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}/trash`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementRestore = createAsyncThunk('wiki/elementRestore', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}/restore`\n\t\tconst response = await axios.put(URL, {})\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementPermanentDelete = createAsyncThunk('wiki/elementPermanentDelete', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}/delete/permanently`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementStarredList = createAsyncThunk('wiki/elementStarredList', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/starred`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementAddStar = createAsyncThunk('wiki/elementAddStar', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}/starred`\n\t\tconst response = await axios.put(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementDeleteStar = createAsyncThunk('wiki/elementDeleteStar', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}/starred`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementNoteVerify = createAsyncThunk('wiki/elementNoteVerify', async ({ channelId, noteId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/verified`\n\t\tconst response = await axios.put(URL, {})\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementNoteUpvote = createAsyncThunk('wiki/elementNoteUpvote', async ({ channelId, noteId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/upvote`\n\t\tconst response = await axios.put(URL, {})\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementNoteDownvote = createAsyncThunk('wiki/elementNoteDownvote', async ({ channelId, noteId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/downvote`\n\t\tconst response = await axios.put(URL, {})\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementBreadCrumb = createAsyncThunk('wiki/elementBreadCrumb', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}/breadcrumb`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementAddMessage = createAsyncThunk('wiki/elementAddMessage', async ({ channelId, elementId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}/message`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementMessages = createAsyncThunk('wiki/elementMessages', async ({ channelId, elementId, page }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}/messages?page=${page}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementDraftList = createAsyncThunk('wiki/elementDraftList', async ({ channelId, elementId, page }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/draft`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const enableNoteEditing = createAsyncThunk('wiki/enableNoteEditing', async ({ channelId, noteId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/editing`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const cancelNoteEditing = createAsyncThunk('wiki/cancelNoteEditing', async ({ channelId, noteId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/editing`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const elementReorder = createAsyncThunk('wiki/elementReorder', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/reorder`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiChannelList = createAsyncThunk('wiki/wikiChannelList', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/channel/list`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiChannels = createAsyncThunk('wiki/wikiChannels', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/channels`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiAddChannel = createAsyncThunk('wiki/wikiAddChannel', async ({ channelId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/channel`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiRemoveChannel = createAsyncThunk('wiki/wikiRemoveChannel', async ({ channelId, rowId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/channel/${rowId}`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiAttachedChannel = createAsyncThunk('wiki/wikiAttachedChannel', async ({ channelId, rowId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/attached/wiki/channels`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiAttachedWikiElement = createAsyncThunk('wiki/wikiAttachedWikiElement', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/attached/wiki/element/${elementId}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiAttachedWikiFolder = createAsyncThunk('wiki/wikiAttachedWikiFolder', async ({ channelId, parentId, page }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/attached/wiki/parent/${parentId}?page=${page}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiNoteVerified = createAsyncThunk('wiki/wikiNoteVerified', async ({ channelId, noteId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/verified`\n\t\tconst response = await axios.put(URL, {})\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiPublishNote = createAsyncThunk('wiki/wikiPublishNote', async ({ channelId, noteId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/publish`\n\t\tconst response = await axios.put(URL, {})\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiNoteSwitchDraft = createAsyncThunk('wiki/wikiNoteSwitchDraft', async ({ channelId, noteId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/switchdraft`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const saveCollaborator = createAsyncThunk('wiki/saveCollaborator', async ({ channelId, noteId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/collaborator`\n\t\tconst response = await axios.put(URL, postdata)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const getWikiElement = createAsyncThunk('wiki/getWikiElement', async ({ channelId, elementId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/element/${elementId}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiSearch = createAsyncThunk('wiki/wikiSearch', async ({ channelId, keyword, channels }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/search?keyword=${keyword}${channels ? `&channels=${channels}` : ''}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const wikiSearchScroll = createAsyncThunk('wiki/wikiSearchScroll', async ({ channelId, scrollId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/search/scroll?id=${scrollId}`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\nexport const wikielementNoteUpvote = createAsyncThunk('wiki/wikielementNoteUpvote', async ({ channelId, elementId = 0 }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/attached/wiki/element/${elementId}/upvote`\n\t\tconst response = await axios.put(URL, {})\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\nexport const wikielementNoteDownvote = createAsyncThunk('wiki/wikielementNoteDownvote', async ({ channelId, elementId = 0 }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/attached/wiki/element/${elementId}/downvote`\n\t\tconst response = await axios.put(URL, {})\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const followupList = createAsyncThunk('wiki/followupList', async ({ channelId, noteId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/followup`\n\t\tconst response = await axios.get(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\nexport const createFollowRequestAll = createAsyncThunk('wiki/createFollowRequestAll', async ({ channelId, noteId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/followup/all`\n\t\tconst response = await axios.post(URL, {})\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const createFollowRequest = createAsyncThunk('wiki/createFollowRequest', async ({ channelId, noteId, postdata }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/followup`\n\t\tconst response = await axios.post(URL, postdata)\n\t\tif (response.status === 201) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const updateFollowRequest = createAsyncThunk('wiki/updateFollowRequest', async ({ channelId, noteId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/followup`\n\t\tconst response = await axios.put(URL, {})\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nexport const deleteFollowRequest = createAsyncThunk('wiki/deleteFollowRequest', async ({ channelId, noteId, userId }, thunkAPI) => {\n\ttry {\n\t\tconst URL = `${DOMAIN}/v1/channel/${channelId}/wiki/note/${noteId}/followup/${userId}`\n\t\tconst response = await axios.delete(URL)\n\t\tif (response.status === 200) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn thunkAPI.rejectWithValue(response.data)\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error', e)\n\t\treturn thunkAPI.rejectWithValue(e.response.data)\n\t}\n})\n\nconst paginationObj = {\n\tpage: 1,\n\tloading: true,\n\thasmore: true,\n\trefreshing: false\n}\nexport const wikiSlice = createSlice({\n\tname: 'ticket',\n\tinitialState: {\n\t\twikielements: {},\n\t\twikielement: {},\n\t\twikielementspagination: {},\n\t\twikibreadcrumb: []\n\t},\n\treducers: {\n\t\tsetWikiElements: (state, { payload }) => {\n\t\t\t// state.wikielements = payload.data\n\t\t},\n\t\tsetWikiElement: (state, { payload }) => {\n\t\t\tstate.wikielement = payload.data\n\t\t}\n\t},\n\textraReducers: {\n\t\t[getElements.pending]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tif (!state.wikielementspagination[arg.channelId]) state.wikielementspagination[arg.channelId] = paginationObj\n\t\t\tstate.wikielementspagination[arg.channelId] = { ...state.wikielementspagination[arg.channelId], loading: true }\n\t\t\tstate.wikielements[arg.channelId] = arg.page === 1 ? [] : state.wikielements[arg.channelId]\n\t\t\treturn state\n\t\t},\n\t\t[getElements.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielementspagination[arg.channelId] = {\n\t\t\t\t...state.wikielementspagination[arg.channelId],\n\t\t\t\tpage: arg.page + 1,\n\t\t\t\tloading: false,\n\t\t\t\thasmore: arg.page === 1 ? true : state.wikielementspagination[arg.ticketFilter].hasmore\n\t\t\t}\n\t\t\tstate.wikielements[arg.channelId] =\n\t\t\t\targ.page === 1 ? payload.data.data : [...payload.data.data, ...state.wikielements[arg.channelId]]\n\t\t\treturn state\n\t\t},\n\t\t[getWikiElement.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielement = payload.data.element\n\t\t},\n\t\t[elementBreadCrumb.fulfilled]: (state, { payload, meta }) => {\n\t\t\tstate.wikibreadcrumb = payload.data.breadcrumb\n\t\t},\n\t\t[enableNoteEditing.fulfilled]: (state, { payload, meta }) => {\n\t\t\tstate.wikielement = payload.data.element\n\t\t},\n\t\t[createFolder.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielement = payload.data.element\n\t\t\tstate.wikielements[arg.channelId] = [payload.data.element, ...state.wikielements[arg.channelId]]\n\t\t},\n\t\t[createNote.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielement = payload.data.element\n\t\t\tstate.wikielements[arg.channelId] = [payload.data.element, ...state.wikielements[arg.channelId]]\n\t\t},\n\t\t[wikiNoteSwitchDraft.fulfilled]: (state, { payload, meta }) => {\n\t\t\tstate.wikielement = payload.data.element\n\t\t},\n\t\t[updateNoteDraft.fulfilled]: (state, { payload, meta }) => {\n\t\t\tstate.wikielement = payload.data.element\n\t\t},\n\t\t[updateNote.fulfilled]: (state, { payload, meta }) => {\n\t\t\tstate.wikielement = payload.data.element\n\t\t},\n\t\t[elementDraftList.pending]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tif (!state.wikielementspagination[arg.channelId]) state.wikielementspagination[arg.channelId] = paginationObj\n\t\t\tstate.wikielementspagination[arg.channelId] = { ...state.wikielementspagination[arg.channelId], loading: true }\n\t\t},\n\t\t[elementDraftList.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielementspagination[arg.channelId] = {\n\t\t\t\t...state.wikielementspagination[arg.channelId],\n\t\t\t\tpage: arg.page + 1,\n\t\t\t\tloading: false,\n\t\t\t\thasmore: arg.page === 1 ? true : state.wikielementspagination[arg.ticketFilter].hasmore\n\t\t\t}\n\t\t\tstate.wikielements[arg.channelId] =\n\t\t\t\targ.page === 1 ? payload.data.data : [...payload.data.data, ...state.wikielements[arg.channelId]]\n\t\t\treturn state\n\t\t},\n\t\t[elementTrashList.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielementspagination[arg.channelId] = {\n\t\t\t\t...state.wikielementspagination[arg.channelId],\n\t\t\t\tpage: arg.page + 1,\n\t\t\t\tloading: false,\n\t\t\t\thasmore: arg.page === 1 ? true : state.wikielementspagination[arg.ticketFilter].hasmore\n\t\t\t}\n\t\t\tstate.wikielements[arg.channelId] =\n\t\t\t\targ.page === 1 ? payload.data.data : [...payload.data.data, ...state.wikielements[arg.channelId]]\n\t\t\treturn state\n\t\t},\n\t\t[elementStarredList.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielementspagination[arg.channelId] = {\n\t\t\t\t...state.wikielementspagination[arg.channelId],\n\t\t\t\tpage: arg.page + 1,\n\t\t\t\tloading: false,\n\t\t\t\thasmore: arg.page === 1 ? true : state.wikielementspagination[arg.ticketFilter].hasmore\n\t\t\t}\n\t\t\tstate.wikielements[arg.channelId] =\n\t\t\t\targ.page === 1 ? payload.data.data : [...payload.data.data, ...state.wikielements[arg.channelId]]\n\t\t\treturn state\n\t\t},\n\t\t[elementArchivedList.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielementspagination[arg.channelId] = {\n\t\t\t\t...state.wikielementspagination[arg.channelId],\n\t\t\t\tpage: arg.page + 1,\n\t\t\t\tloading: false,\n\t\t\t\thasmore: arg.page === 1 ? true : state.wikielementspagination[arg.ticketFilter].hasmore\n\t\t\t}\n\t\t\tstate.wikielements[arg.channelId] =\n\t\t\t\targ.page === 1 ? payload.data.data : [...payload.data.data, ...state.wikielements[arg.channelId]]\n\t\t\treturn state\n\t\t},\n\t\t[saveCollaborator.fulfilled]: (state, { payload, meta }) => {\n\t\t\tstate.wikielement = payload.data.element\n\t\t},\n\t\t[wikiPublishNote.fulfilled]: (state, { payload, meta }) => {\n\t\t\tstate.wikielement = payload.data.element\n\t\t},\n\t\t[elementArchive.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielement = payload.data.element\n\t\t\tstate.wikielements[arg.channelId] = (state.wikielements[arg.channelId] || []).filter((o) => o.id !== arg.elementId)\n\t\t},\n\t\t[elementUnarchive.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielement = payload.data.element\n\t\t\tstate.wikielements[arg.channelId] = (state.wikielements[arg.channelId] || []).filter((o) => o.id !== arg.elementId)\n\t\t},\n\t\t[elementTrash.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielement = payload.data.element\n\t\t\tstate.wikielements[arg.channelId] = (state.wikielements[arg.channelId] || []).filter((o) => o.id !== arg.elementId)\n\t\t},\n\t\t[elementRestore.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielement = payload.data.element\n\t\t\tstate.wikielements[arg.channelId] = (state.wikielements[arg.channelId] || []).filter((o) => o.id !== arg.elementId)\n\t\t},\n\t\t[elementAddStar.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielement = payload.data.element\n\t\t\tstate.wikielements[arg.channelId] = (state.wikielements[arg.channelId] || []).map((o) => (o.id === arg.elementId ? payload.data.element : o))\n\t\t},\n\t\t[elementDeleteStar.fulfilled]: (state, { payload, meta }) => {\n\t\t\tconst { arg } = meta\n\t\t\tstate.wikielement = payload.data.element\n\t\t\tstate.wikielements[arg.channelId] = (state.wikielements[arg.channelId] || []).map((o) => (o.id === arg.elementId ? payload.data.element : o))\n\t\t}\n\t}\n})\n\nexport const { setWikiElement } = wikiSlice.actions\n\nexport const wikiSelector = (state) => state.wiki\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/HelperSlice.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/UploadSlice.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/GlobalStateSlice.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/AskSlice.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/config.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/UserSlice.js",["175","176","177"],"/** @format */\n\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axios, { DOMAIN } from './config'\n\nexport const userSlice = createSlice({\n\tname: 'user',\n\tinitialState: {\n\t\tuser: {},\n\t},\n\treducers: {\n\t\tsetUser: (state, { payload }) => {\n\t\t\tstate.user = payload.data\n\t\t}\n\t},\n\textraReducers: {}\n})\n\nexport const { setUser } = userSlice.actions\n\nexport const userSelector = (state) => state.user\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/pages/home/Home.js",["178","179","180","181"],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/pages/home/Ask.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/pages/home/Browse.js",[],"/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/pages/home/Starred.js",["182"],"import React from 'react'\n// import Styles from './Recent.module.css'\n\nimport InfiniteScroll from 'react-infinite-scroll-component'\n\n\n//import { inboxnotes, showNote } from '../model/Api'\n\nimport Detail from '../../Detail'\n\nimport Loading from '../../component/Loading'\nimport Nodata from '../../component/Nodata'\n\nconst Styles = {}\n\nexport default function Starred() {\n\t// const state = useTrackedState()\n\t// const dispatch = useDispatch()\n\n\tconst { notedetail, token, user, recent, recentloading, recentpaging } = {}\n\n\tconst _inboxnotes = async (paging) => {\n\t\t// if (user.current_project && recentloading === false) {\n\t\t// \tdispatch({ type: 'RECENTLOADING', payload: true })\n\t\t// \tif (paging === 1) {\n\t\t// \t\tdispatch({ type: 'RECENT', payload: [] })\n\t\t// \t}\n\t\t// \tinboxnotes(user.current_project, paging)\n\t\t// }\n\t}\n\tconst _getNoteDetail = async (noteId) => {\n\t\t//showNote(noteId)\n\t}\n\tReact.useEffect(() => {\n\t\t_inboxnotes(1)\n\t}, [user])\n\tconst isFloat = (n) => {\n\t\treturn n === 0 ? false : Number(n) === n && n % 1 !== 0\n\t}\n\tif (notedetail?.id) {\n\t\treturn <Detail />\n\t}\n\treturn (\n\t\t<div className={Styles.Recent} id='recent'>\n\t\t\t{recentloading && recent.length === 0 ? <Loading /> : null}\n\t\t\t{recentloading === false && recent.length === 0 ? <Nodata /> : null}\n\t\t\t<InfiniteScroll\n\t\t\t\tdataLength={recent.length} //This is important field to render the next data\n\t\t\t\tnext={() => _inboxnotes(recentpaging)}\n\t\t\t\thasMore={!isFloat(recent.length / 30)}\n\t\t\t\tloader={null}\n\t\t\t\tendMessage={null}\n\t\t\t\tscrollableTarget={'recent'}>\n\t\t\t\t<ul>\n\t\t\t\t\t{recent.map((o, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={`list${i}`} onClick={() => _getNoteDetail(o.id)}>\n\t\t\t\t\t\t\t\t{o.title}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</InfiniteScroll>\n\t\t</div>\n\t)\n}\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/Main.jsx",["183"],"import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Styles from './HomeTab.module.css'\n\nimport Starred from './pages/home/Starred'\nimport Ask from './pages/home/Ask'\nimport Browse from './pages/home/Browse'\nimport Home from './pages/home/Home'\nimport { globalStateSelector, setPage } from 'features/GlobalStateSlice'\n\n\n\nconst MainComponent = ({ page }) => {\n\tif (page === 'Home') {\n\t\treturn <Home />\n\t} else if (page === 'Channel') {\n\t\treturn <Browse />\n\t} else if (page === 'Ask') {\n\t\treturn <Ask />\n\t} else if (page === 'Starred') {\n\t\treturn <Starred />\n\t}\n\treturn null\n}\n\n\nfunction Main() {\n\tconst dispatch = useDispatch()\n\tconst { page } = useSelector(globalStateSelector)\n\t//const [active, setActive] = useState('Home')\n\n\treturn (\n\t\t<div className={Styles.Tab}>\n\t\t\t<div className={Styles.Tabbar}>\n\t\t\t\t<ul>\n\t\t\t\t\t<li onClick={() => dispatch(setPage({ data: 'Home' }))} className={`${page === 'Home' ? Styles.active : null}`}>\n\t\t\t\t\t\tHome\n\t\t\t\t\t</li>\n\t\t\t\t\t<li onClick={() => dispatch(setPage({ data: 'Channel' }))} className={`${page === 'Channel' ? Styles.active : null}`}>\n\t\t\t\t\t\tChannel\n\t\t\t\t\t</li>\n\t\t\t\t\t<li onClick={() => dispatch(setPage({ data: 'Ask' }))} className={`${page === 'Ask' ? Styles.active : null}`}>\n\t\t\t\t\t\tAsk\n\t\t\t\t\t</li>\n\t\t\t\t\t<li onClick={() => dispatch(setPage({ data: 'Starred' }))} className={`${page === 'Starred' ? Styles.active : null}`}>\n\t\t\t\t\t\tStarred\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className={`${Styles.Content}`}>\n\t\t\t\t<MainComponent page={page} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\nexport default Main\n","/Users/macbook/Desktop/workspace/Wikiapp2workspace/extension/src/features/events.js",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":2,"column":16,"nodeType":"190","messageId":"191","endLine":2,"endColumn":22},{"ruleId":"188","severity":1,"message":"192","line":7,"column":8,"nodeType":"190","messageId":"191","endLine":7,"endColumn":14},{"ruleId":"188","severity":1,"message":"193","line":8,"column":8,"nodeType":"190","messageId":"191","endLine":8,"endColumn":14},{"ruleId":"188","severity":1,"message":"194","line":11,"column":10,"nodeType":"190","messageId":"191","endLine":11,"endColumn":33},{"ruleId":"188","severity":1,"message":"195","line":14,"column":10,"nodeType":"190","messageId":"191","endLine":14,"endColumn":22},{"ruleId":"188","severity":1,"message":"196","line":17,"column":10,"nodeType":"190","messageId":"191","endLine":17,"endColumn":18},{"ruleId":"188","severity":1,"message":"197","line":17,"column":33,"nodeType":"190","messageId":"191","endLine":17,"endColumn":40},{"ruleId":"188","severity":1,"message":"198","line":21,"column":27,"nodeType":"190","messageId":"191","endLine":21,"endColumn":31},{"ruleId":"188","severity":1,"message":"199","line":22,"column":10,"nodeType":"190","messageId":"191","endLine":22,"endColumn":14},{"ruleId":"188","severity":1,"message":"200","line":50,"column":8,"nodeType":"190","messageId":"191","endLine":50,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":2,"column":16,"nodeType":"190","messageId":"191","endLine":2,"endColumn":22},{"ruleId":"201","severity":1,"message":"202","line":46,"column":5,"nodeType":"203","endLine":46,"endColumn":12,"suggestions":"204"},{"ruleId":"188","severity":1,"message":"189","line":2,"column":16,"nodeType":"190","messageId":"191","endLine":2,"endColumn":22},{"ruleId":"188","severity":1,"message":"205","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":21},{"ruleId":"188","severity":1,"message":"206","line":14,"column":57,"nodeType":"190","messageId":"191","endLine":14,"endColumn":62},{"ruleId":"188","severity":1,"message":"207","line":14,"column":64,"nodeType":"190","messageId":"191","endLine":14,"endColumn":80},{"ruleId":"188","severity":1,"message":"199","line":14,"column":82,"nodeType":"190","messageId":"191","endLine":14,"endColumn":86},{"ruleId":"208","severity":1,"message":"209","line":33,"column":7,"nodeType":"210","endLine":33,"endColumn":53},{"ruleId":"211","severity":1,"message":"212","line":33,"column":15,"nodeType":"213","messageId":"214","endLine":33,"endColumn":35},{"ruleId":"188","severity":1,"message":"215","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":11},{"ruleId":"188","severity":1,"message":"216","line":2,"column":67,"nodeType":"190","messageId":"191","endLine":2,"endColumn":71},{"ruleId":"188","severity":1,"message":"217","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":13},{"ruleId":"188","severity":1,"message":"218","line":11,"column":10,"nodeType":"190","messageId":"191","endLine":11,"endColumn":18},{"ruleId":"188","severity":1,"message":"219","line":11,"column":20,"nodeType":"190","messageId":"191","endLine":11,"endColumn":32},{"ruleId":"188","severity":1,"message":"199","line":17,"column":40,"nodeType":"190","messageId":"191","endLine":17,"endColumn":44},{"ruleId":"188","severity":1,"message":"206","line":17,"column":46,"nodeType":"190","messageId":"191","endLine":17,"endColumn":51},{"ruleId":"201","severity":1,"message":"220","line":58,"column":5,"nodeType":"203","endLine":58,"endColumn":7,"suggestions":"221"},{"ruleId":"208","severity":1,"message":"209","line":64,"column":7,"nodeType":"210","endLine":64,"endColumn":53},{"ruleId":"211","severity":1,"message":"212","line":64,"column":15,"nodeType":"213","messageId":"214","endLine":64,"endColumn":35},{"ruleId":"188","severity":1,"message":"222","line":35,"column":5,"nodeType":"190","messageId":"191","endLine":35,"endColumn":10},{"ruleId":"188","severity":1,"message":"223","line":2,"column":30,"nodeType":"190","messageId":"191","endLine":2,"endColumn":42},{"ruleId":"188","severity":1,"message":"224","line":2,"column":44,"nodeType":"190","messageId":"191","endLine":2,"endColumn":48},{"ruleId":"188","severity":1,"message":"225","line":5,"column":8,"nodeType":"190","messageId":"191","endLine":5,"endColumn":14},{"ruleId":"188","severity":1,"message":"226","line":276,"column":10,"nodeType":"190","messageId":"191","endLine":276,"endColumn":20},{"ruleId":"188","severity":1,"message":"224","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":14},{"ruleId":"227","severity":1,"message":"228","line":19,"column":66,"nodeType":"229","messageId":"230","endLine":19,"endColumn":68},{"ruleId":"188","severity":1,"message":"231","line":744,"column":12,"nodeType":"190","messageId":"191","endLine":744,"endColumn":15},{"ruleId":"188","severity":1,"message":"231","line":750,"column":12,"nodeType":"190","messageId":"191","endLine":750,"endColumn":15},{"ruleId":"188","severity":1,"message":"231","line":756,"column":12,"nodeType":"190","messageId":"191","endLine":756,"endColumn":15},{"ruleId":"188","severity":1,"message":"231","line":780,"column":12,"nodeType":"190","messageId":"191","endLine":780,"endColumn":15},{"ruleId":"188","severity":1,"message":"232","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":26},{"ruleId":"188","severity":1,"message":"233","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":13},{"ruleId":"188","severity":1,"message":"234","line":4,"column":17,"nodeType":"190","messageId":"191","endLine":4,"endColumn":23},{"ruleId":"188","severity":1,"message":"235","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":22},{"ruleId":"188","severity":1,"message":"236","line":2,"column":30,"nodeType":"190","messageId":"191","endLine":2,"endColumn":38},{"ruleId":"188","severity":1,"message":"237","line":5,"column":44,"nodeType":"190","messageId":"191","endLine":5,"endColumn":52},{"ruleId":"188","severity":1,"message":"238","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":16},{"ruleId":"188","severity":1,"message":"206","line":20,"column":22,"nodeType":"190","messageId":"191","endLine":20,"endColumn":27},{"ruleId":"188","severity":1,"message":"236","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":18},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'uuidv4' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","'Detail' is defined but never used.","'checkExtensionInstalled' is defined but never used.","'baseSelector' is defined but never used.","'getBases' is defined but never used.","'getUser' is defined but never used.","'page' is assigned a value but never used.","'user' is assigned a value but never used.","'isJson' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["241"],"'useSelector' is defined but never used.","'token' is assigned a value but never used.","'searchresultuuid' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'X' is defined but never used.","'Link' is defined but never used.","'toast' is defined but never used.","'copylink' is defined but never used.","'copyRichText' is defined but never used.","React Hook React.useEffect has a missing dependency: 'tracking'. Either include it or remove the dependency array.",["242"],"'check' is defined but never used.","'createEditor' is defined but never used.","'Node' is defined but never used.","'Styles' is defined but never used.","'insertData' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'arg' is assigned a value but never used.","'createAsyncThunk' is defined but never used.","'axios' is defined but never used.","'DOMAIN' is defined but never used.","'userSelector' is defined but never used.","'useState' is defined but never used.","'listBase' is defined but never used.","'Camera' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [bases, dispatch]",{"range":"247","text":"248"},"Update the dependencies array to be: [tracking]",{"range":"249","text":"250"},[1747,1754],"[bases, dispatch]",[1826,1828],"[tracking]"]